[mod-name]
RailLogisticsDispatcher=철도 물류 관리자 2(Rail Logistics Dispatcher 2)

[mod-description]
RailLogisticsDispatcher=물류 관리자(건물)을 추가하여 공급 및 요청역을 기반으로 철도 물류를 자동화합니다.\n\n직관적인 인터페이스를 제공합니다. LTN에서 영감을 받았지만 다른 방식으로 개발되었습니다.\n\n번역: SimpleKoreanLocale(PolarZero)



[controls]
viirld-pause-key=관리자 일시정지/일시정지 해제

[entity-name]
viirld-dispatcher=철도 물류 관리자
viirld-io=물류 관리자 연결부

[entity-description]
viirld-dispatcher=인근 기차 정류장을 철도 물류망에 연결합니다.\n사용하려면 정류장에 포함할 아이템 신호가 포함된 상자를 입력부 신호에 연결하세요.\n열차가 정차하면 화물 정보가 포함된 신호가 출력부를 통해 전달됩니다.

[technology-name]
viirld-dispatcher=철도 물류 관리자

[technology-description]
viirld-dispatcher=공급역, 요청역, 열차를 하나의 자동화된 네트워크로 결합하여 철도 물류를 자동화합니다.


[virtual-signal-name]
viirld-delivery=배송 ID
viirld-delivery-pause=배송 중지

[virtual-signal-description]
viirld-delivery=철도 물류 관리자가 역에 도착한 배송을 확인하는 데 사용합니다.\n기술적인 신호이므로 임의로 변경해서는 안 됩니다.
viirld-delivery-pause=철도 물류 관리자가 이 신호를 입력받으면 배송을 일시 중지합니다.

[mod-setting-name]
viirld-correctScheduleAtProvider=탄력 배송
viirld-countingInsertersContent=투입기 아이템 고려
viirld-debug=디버그
viirld-load-or-cond-full="또는 완전 적재시" 조건 추가
viirld-minEnergyUseTrainMJ=최소 연료량 (MJ)
viirld-pauseNewDispatchers=새로운 관리자 일시 정지
viirld-set-train-group=차고지 열차 그룹 설정
viirld-unload-or-cond-zeros="또는 아이템/유체 = 0" 조건 추가
viirld-updateTicks=업데이트 간격 (틱)
viirld-use-hack-to-save-interrupts=인터럽트 저장 (꼼수)

[mod-setting-description]
viirld-correctScheduleAtProvider=공급역에 도착한 열차가, 다른 역으로 이동하는 동안 발생한 공급 및 요청 변경에 따라 배송을 조정할 수 있도록 허용합니다.
viirld-countingInsertersContent=역의 내용물을 계산할 때 입력 신호와 열차 화물이 고려됩니다.\n이 옵션을 사용하면 투입기 내용물 계산이 동시에 활성화되어,\n투입기에 잔여 아이템이 남아있는 경우 적재 또는 하역 중에 내용물이 혼합되는 경우를 방지합니다.
viirld-debug=일부 디버그용 메시지 및 표시기를 활성화합니다.
viirld-load-or-cond-full=요청역의 각 아이템/유체에 대해 “또는 완전 적재시” 조건을 추가할 수 있습니다.\n이 옵션은 모드의 의도에 어긋나므로 활성화하지 않는 것을 추천합니다..
viirld-minEnergyUseTrainMJ=배송에 필요한 열차의 최소 연료량을 설정합니다.\n지정된 양보다 적은 연료를 가진 열차는 배송에 사용되지 않고 대기역에 남아 있습니다.\nMJ 단위 / 100MJ: 25 석탄
viirld-pauseNewDispatchers=새로 설치된 관리자에 이미 설정값이 있는 경우(고스트에서 복사했거나 또는 설계도면에서 생성) 일시 정지합니다.\n\n이 옵션으로 새로 복사한 관리자 객체에 원치않는 배달이 생성되는 것을 막을 수 있습니다.
viirld-set-train-group=차고지에 도착한 열차는 차고지 이름과 일치하는 그룹에 할당됩니다.\n\n배송 중에 열차는 그룹을 떠났다가 차고지로 다시 돌아옵니다.
viirld-unload-or-cond-zeros=요청역의 각 아이템/유체에 대해 “또는 아이템/유체 = 0” 조건을 추가할 수 있습니다.\n이 옵션은 모드의 의도에 어긋나므로 활성화하지 않는 것을 추천합니다..
viirld-updateTicks=각 역의 업데이트 간격을 설정합니다 - 내용물, 설정, 공급 및 요청을 다시 계산합니다.\n\n값이 낮을수록 업데이트 빈도가 잦지만 CPU에 더 많은 부하가 걸립니다.\n\n참고: 각 역은 최소 60틱에 한 번만 업데이트됩니다.
viirld-use-hack-to-save-interrupts=Factorio Lua API는 아직 열차 인터럽트를 저장하거나 변경하는 방법을 제공하지 않으며, 일정이 변경되면 간단히 삭제될 뿐입니다.\n\n팩토리오에서 해당 기능을 추가할 때까지는 해결 방법(꼼수)을 사용할 수 있습니다.\n\n일부 모드가 이 꼼수를 방해할 수 있으므로, 안정적으로 작동하지 않을 수 있습니다.

[viirld-gui]
ANY_FLUID_BY_SIGNALS=유체 신호에 따름:
ANY_ITEM_BY_SIGNALS=아이템 신호에 따름:
EL_ALLOW_ANY_FLUID_PROVIDE=[item=passive-provider-chest] 공급역
EL_ALLOW_ANY_FLUID_PROVIDE-tt=관리자 입력부 신호에 따라 열차에 유체를 공급합니다.\n신호는 0보다 커야 합니다(>0)\n\n입력부는 정류장의 유체 저장 탱크에 연결되어 있어야 합니다.
EL_ALLOW_ANY_FLUID_REQUEST=[item=requester-chest] 요청역
EL_ALLOW_ANY_FLUID_REQUEST-tt=관리자 입력부 신호에 따라 유체를 요청합니다.\n요청하려면 신호가 0보다 작아야 합니다(<0)\n입력부는 정류장의 유체 저장 탱크에 연결되어 있어야 합니다.\n\n최소 설정(모든 유체 공통)을 사용하면 배송당 지정된 값 이상을 운반할 수 있습니다.
EL_ALLOW_ANY_ITEM_PROVIDE=[item=passive-provider-chest] 공급역
EL_ALLOW_ANY_ITEM_PROVIDE-tt=관리자 입력부 신호에 따라 열차에 아이템을 공급합니다.\n신호는 0보다 커야 합니다(>0)\n\n입력부는 정류장의 상자나 창고 등에 연결되어 있어야 합니다.
EL_ALLOW_ANY_ITEM_REQUEST=[item=requester-chest] 요청역
EL_ALLOW_ANY_ITEM_REQUEST-tt=관리자 입력부 신호에 따라 아이템을 요청합니다.\n요청하려면 신호가 0보다 작아야 합니다(<0)\n 입력부는 정류장의 상자나 창고 등에 연결되어 있어야 합니다.\n\n최소 설정(모든 아이템 공통)을 사용하면 배송당 지정된 값 이상을 운반할 수 있습니다.\n\n예를 들어 최소치를 50묶음으로 설정시: 요청역에 50묶음 이상의 자원이 없으며, 공급역에 자원 50묶음이 이상이 있는 상태에서, 적절한 크기의 열차를 이용할 수 있는 경우 배송이 생성됩니다.
EL_APPLY=적용
EL_CARGO_STAT_TABLE-H-COUNT=배송
EL_CARGO_STAT_TABLE-H-LASTTIME=최근 시간
EL_CARGO_STAT_TABLE-H-RECV=받음
EL_CARGO_STAT_TABLE-H-SENT=보냄
EL_CARGO_STAT_TABLE-TITLE=통계
EL_DELETE_DELIVERY-tt=배송 삭제\n\n관리자가 이 배송을 잊어버리도록 합니다. 열차에는 영향을 미치지 않으며, 이미 있는 경우 계속 경로를 유지합니다.
EL_DELIVERIES_TABLE-H-FROM=출발
EL_DELIVERIES_TABLE-H-TIME=시간
EL_DELIVERIES_TABLE-H-TO=도착
EL_DELIVERIES_TABLE-TITLE=배송
EL_ERR_TABLE-H-ERROR=오류
EL_ERR_TABLE-H-TIME=시간
EL_IO_TABLE-H-BALANCE=밸런스
EL_IO_TABLE-H-ON_STATION=역에 정차
EL_IO_TABLE-H-ON_WAY=이동 중
EL_IO_TABLE-TITLE=[color=__1__]요청-[/color]및 [color=__2__]공급+[/color]
EL_ITEM_ALLOW_PROVIDE=[item=passive-provider-chest] 공급역
EL_ITEM_ALLOW_PROVIDE-tt=선택한 자원을 열차에 공급합니다.\n\n공급량은 지정한 값과 관리자 입력부 신호에 따라 결정됩니다.\n입력부와 역의 상자 및/또는 저장 탱크를 전선으로 연결해야 합니다.
EL_ITEM_ALLOW_REQUEST=[item=requester-chest] 요청역:
EL_ITEM_ALLOW_REQUEST-tt=선택한 자원을 요청합니다.\n요청량은 지정한 값과 관리자 입력부 신호에 따라 결정됩니다.\n입력부와 역의 상자 및/또는 저장 탱크를 전선으로 연결해야 합니다.\n최소값을 설정하면 배송당 지정된 값 이상을 운반할 수 있습니다.\n\n예를 들어 최소치를 50묶음으로 설정시:\n- 요청역에 50묶음 이상의 자원이 없으며,\n- 공급역에 자원 50묶음이 이상이 있는 상태에서,\n- 적절한 크기의 열차를 이용할 수 있는 경우\n배송이 생성됩니다.
EL_ITEM_BUTTON-ANY-tt=관리자 입력부 신호에 따라 자동으로 요청/공급을 결정하도록 합니다.\n\n음수(< 0)의 화물 또는 유체 신호가 입력될 경우 해당 자원을 요청하고,\n양수(> 0)인 경우 열차에 해당 자원을 공급합니다.
EL_ITEM_BUTTON-tt=아이템 또는 유체를 선택한 다음 요청 또는 공급 옵션을 설정합니다.\n\n설정에 따라 관리자는 기차 네트워크에서 선택한 자원을 자동으로 제공하거나 요청할 것입니다.\n\n예를 들어 최소치를 50묶음으로 설정시:\n- 요청역에 50묶음 이상의 자원이 없으며,\n- 공급역에 자원 50묶음이 이상이 있는 상태에서,\n- 적절한 크기의 열차를 이용할 수 있는 경우\n배송이 생성됩니다.
EL_ITEM_MEM_BUTTON=메모리:
EL_ITEM_MEM_BUTTON-tt=Ctrl, Alt 또는 Shift 키를 누른 상태에서 왼쪽 클릭하여 아이템 설정을 셀에 저장합니다.\n저장된 설정을 적용하려면 좌클릭.\n셀을 지우려면 우클릭합니다.
EL_ITEM_MIN=최소:
EL_ITEM_MIN-tt=선택한 자원을 요청합니다.\n\n요청량은 지정한 값과 관리자 입력부 신호에 따라 결정됩니다.\n역의 상자나 창고 및/또는 저장 탱크에 연결해야 합니다.\n최소값을 설정하면 배송당 지정된 값 이상을 운반할 수 있습니다.
EL_ITEM_REQUEST-tt=역에서 선택한 자원을 요청합니다.\n\n요청량은 지정한 값과 관리자 입력부 신호에 따라 결정됩니다.\n역의 상자나 창고 및/또는 저장 탱크에 연결해야 합니다.\n최소값을 설정하면 배송당 지정된 값 이상을 운반할 수 있습니다.
EL_LEN=화물차:
EL_LEN-tt=이 역에 정차할 열차 길이를 설정합니다: “최소"-”최대“ 하이픈 및 쌍따옴표 포함.\n예를 들어 "2"-"3"은 기관차를 포함한 2~3량의 열차만 정차할 수 있음을 의미합니다.\n일부 값은 생략할 수 있습니다: " "-"3"은 1,2,3량을 전부 포함
EL_MIN_ANY_FLUID=최소:
EL_MIN_ANY_FLUID-tt=관리자 입력부 신호에 따라 유체를 요청합니다.\n요청하려면 신호가 0보다 작아야 합니다(<0)\n 입력부는 정류장의 저장 탱크에 연결되어 있어야 합니다.\n\n최소 설정(모든 아이템 공통)을 사용하면 배송당 지정된 값 이상을 운반할 수 있습니다.
EL_MIN_ANY_ITEM=최소:
EL_MIN_ANY_ITEM-tt=관리자 입력부 신호에 따라 유체를 요청합니다.\n요청하려면 신호가 0보다 작아야 합니다(<0)\n 입력부는 정류장의 상자나 창고 등에 연결되어 있어야 합니다.\n\n최소 설정(모든 아이템 공통)을 사용하면 배송당 지정된 값 이상을 운반할 수 있습니다.\n\n예를 들어 최소치를 50묶음으로 설정시:\n- 요청역에 50묶음 이상의 자원이 없으며,\n- 공급역에 자원 50묶음이 이상이 있는 상태에서,\n- 적절한 크기의 열차를 이용할 수 있는 경우\n배송이 생성됩니다.
EL_MODE_DEPOT=[item=locomotive] 대기역
EL_MODE_DEPOT-tt=대기역에서는 열차가 다음 배송 작업을 기다리며 연료를 보급받습니다.\n\n열차는 항상 출발한 역과 동일한 이름의 대기역으로 이동합니다.\n\n열차 종류에 따라 다른 대기역을 지정하려면 이름을 다르게 지정하세요.\n\n연료가 부족하거나 적재된 화물이 있는 열차는 연료를 보급받고 완전히 하역될 때까지 기다립니다.
EL_MODE_ENDPOINT=[item=passive-provider-chest] 공급 / [item=requester-chest] 요청
EL_MODE_ENDPOINT-tt=모드 설정 및 재료 신호에 따라 역은 배송 작업에 참여하게 됩니다.\n\n화물 유형(아이템 또는 유체)에 따라 요청 또는 공급역 모드를 전환할 수 있습니다.\n\n[virtual-signal=signal-anything]자유 모드로 구성할 수도 있습니다.\n\n이 경우 요청(<0) 및 공급(>0)은 관리자 입력부의 신호에 따라 결정됩니다.\n\n네트워크에 요청 및 공급 이해관계가 일치하는 두 역이 있을 때, 적합한 열차가 있는 경우 배송이 생성됩니다.
EL_MODE_LIQUIDATION=[item=active-provider-chest] 회수
EL_MODE_LIQUIDATION-tt=이는 «[item=passive-provider-chest] 공급/ [item=requester-chest] 요청» 모드와 유사하지만 다음과 같은 변경 사항이 있습니다.\n- 이 역의 요청이 비활성화됩니다.\n- 가장 높은 공급 우선순위로 설정됩니다.\n- 다른 역에서 이 역 아이템을 요청할 때 최소값 설정을 무시합니다.\n\n역을 철거하기 전에 아이템을 정리할 때 유용하게 사용할 수 있습니다.
EL_MODE_OFF=비활성화
EL_MODE_OFF-tt=관리자에서 이 정류장을 제어하지 않습니다.
EL_NETWORK=네트워크:
EL_NETWORK-tt=이 역이 어떤 고유 네트워크에 속할지 지정할 수 있습니다. 예: 1, 2, ...\n\n각 네트워크는 격리되어 있으며, 각 공급/요청역에 의한 배송은 고유 네트워크를 벗어나지 않습니다. 그러나 물리적인 철도는 공유합니다.
EL_OUT_MODE_EXCHANGE=교환 필요량 출력
EL_OUT_MODE_EXCHANGE-tt=출력부 출력값으로 열차를 보내기 위해 적재(>0) 또는 하역(<0)해야 하는 화물 잔량을 표시합니다.\n\n예를 들어, 공급역은 적재된 화물을 양수 값으로 표시합니다. 그리고 요청역은 열차에 적재해야 하는 화물량을 음수 값으로 표시합니다.\n\n“출력 부호 반전” 옵션을 사용하면 부호를 변경할 수 있습니다: 이 경우 적재: <0 및 하역: >0.\n\n다음 신호도 출력부에서 전송됩니다.\n[virtual-signal=signal-P]rovider - 이 역이 공급역 모드이며, 열차가 정차해 있는 경우 출력됩니다,\n[virtual-signal=signal-R]equester - 이 역이 요청역 모드이며, 열차가 정차해 있는 경우 출력됩니다.\n[virtual-signal=signal-E]rror - 오류가 발생한 경우 출력됩니다.\n[virtual-signal=signal-L]ength - 기관차를 포함한 열차의 길이를 출력합니다.\n[virtual-signal=signal-C]argo - 화물차 수.\n[virtual-signal=signal-F]luid - 유체 화물차 수.
EL_OUT_MODE_NEGATE=출력 부호 반전
EL_OUT_MODE_NEGATE-tt=출력부 출력 부호를 반전합니다.\n\n“적재 필요량 출력” 모드의 경우 적재에 필요한 열차 내용에 -부호가 표시되고, “교환 필요량 출력” 모드의 경우 적재 - <0, 하역 - >0으로 부호가 변경됩니다.
EL_OUT_MODE_TARGET_CONTENTS=적재 필요량 출력
EL_OUT_MODE_TARGET_CONTENTS-tt=출력부 출력값으로 적재해야 하는 이이템/유체가 표시됩니다.\n\n예를 들어, 공급역에는 적재 중인 화물이, 요청역일 경우 이 값이 비어 있을 것입니다. (열차에 아무것도 남아 있지 않아야 합니다)\n\n다음 신호도 출력부에서 전송됩니다.\n[virtual-signal=signal-P]rovider - 이 역이 공급역 모드이며, 열차가 정차해 있는 경우 출력됩니다,\n[virtual-signal=signal-R]equester - 이 역이 요청역 모드이며, 열차가 정차해 있는 경우 출력됩니다.\n[virtual-signal=signal-E]rror - 오류가 발생한 경우 출력됩니다.\n[virtual-signal=signal-D] - 이 역의 활성 배송 건수입니다.\n[virtual-signal=signal-L]ength - 기관차를 포함한 열차의 길이를 출력합니다.\n[virtual-signal=signal-C]argo - 화물차 수.\n[virtual-signal=signal-F]luid - 유체 화물차 수.
EL_PAUSE=일시 정지
EL_PAUSE-paused=[virtual-signal=viirld-delivery-pause] 일시 정지 해제
EL_PAUSE-tt=이 역에서의 배달 생성을 일시 중지할 수 있습니다.\n\n설정에서 새 관리자를 자동으로 일시 정지할지 설정할 수 있습니다.\n\n[virtual-signal=viirld-delivery-pause] 신호를 사용하여 회로 네트워크를 사용한 일시 정지도 수행할 수 있습니다.\n신호로 일시 정지가 설정된 경우 버튼으로는 일시 정지를 해제할 수 없습니다.
EL_ROLLBACK=실행 취소
EL_STATION_TEMPLATE=정류장 이름:
EL_STATION_TEMPLATE-tt=자동 정류장 이름 설정을 위한 템플릿.\n\n«[item=passive-provider-chest] 공급 / [item=requester-chest] 요청» 모드 또는 «[item=active-provider-chest] 회수» 모드일 경우, 다음 값을 사용할 수 있습니다: \n- %d - 숫자에 해당합니다. 고유한 임의의 숫자로 대체됩니다;\n- %s – 모든 문자에 해당합니다. 고유한 역 이름을 가지도록 "blabla%d"로 대체됩니다;\n- %x – 역의 X 좌표로 대체됩니다;\n- %y – 역의 Y 좌표로 대체됩니다;\n- %u – 는 고유한 정류장 식별자로 대체됩니다.\n\n이러한 값은 «[item=locomotive] 대기역» 에는 사용할 수 없습니다.\n\n참고: 역 이름이 이미 템플릿 구성과 일치하는 경우 이름 변경이 이루어지지 않는다는 점에 유의하세요,\n이미 정류장이 "[item=iron-plate] Zheleznogorsk" 이름이며 (겹치는 이름의 다른 정류장은 없음), "[item=iron-plate] %s" 템플릿을 사용해도 "[item=iron-plate] blabla1" 로 정류장 이름이 변경되지 않습니다.\n\n예: \n- 템플릿 "[item=iron-plate] %d" -> "[item=iron-plate] 1" 또는 "[item=iron-plate] 2", ...\n- 템플릿 "[item=iron-plate] %s" -> "[item=iron-plate] blabla1" 또는 "[item=iron-plate] blabla2", ...\n- 템플릿 "[item=iron-plate] %xx%y" -> "[item=iron-plate] 45x76"\n- 템플릿 "[item=iron-plate]" -> "[item=iron-plate]1" - %d나 %s 값이 없을 경우, 이름 우측에 숫자가 추가됩니다.\n값이 비어 있으면 관리자는 정류장 이름을 바꾸지 않습니다.
EL_STAT_TRAINS=Trains were here: __1__
FLAG_turnInserters=투입기 오입 방지
FLAG_turnInserters-tt=간혹 기차를 보낼 때 투입기에 무언가 남아있을 수도 있습니다. 이 옵션을 활성화하면 기차가 출발할 때 투입기를 일시적으로 180도 돌려 잡고 있던 아이템을 상자로 다시 되돌립니다.
FLAG_useEquals=완전 일치 비교식 사용
FLAG_useEquals-tt=기본적으로 일정의 아이템을 비교할 때 너그러운 비교식(>=)를 사용합니다. 이 옵션을 사용하면 비교에 완전 일치(=)가 필요하도록 합니다. 이 옵션은 보다 정확한 하역에 유용할 수 있습니다.
FLAG_useSignals=신호 모드
FLAG_useSignals-tt=신호를 기반으로 이 정류장에 대한 스케줄을 생성합니다. ([virtual-signal=signal-green]) 정류장에 연결하는 것을 잊지 마세요.
FLY-SELECT_ITEM_OR_FLUID=아이템 또는 유체 선택:
WINDOW_TITLE=__1__ 정류장 관리자
WINDOW_TITLE-ghost=정류장 관리자 (고스트)
mem-any-item-fluid=유체 신호에 따름:
mem-any-item-item=아이템 신호에 따름:
mem-any-item-nothing=    공급과 요청 모두 비활성화됨
mem-any-item-provide=    [item=passive-provider-chest] 공급 활성화
mem-any-item-request=    [item=requester-chest] 요청 활성화, 최소 화물 임계값: __1__
mem-item-nothing=공급과 요청 모두 비활성화됨
mem-item-provide=[item=passive-provider-chest] 공급 활성화
mem-item-request=[item=requester-chest] 요청 활성화, 최소 화물 임계값: __1__
mem-item-tt=Ctrl, Alt 또는 Shift 키를 누른 상태에서 왼쪽 클릭하여 아이템 설정을 셀에 저장합니다.\n저장된 설정을 적용하려면 좌클릭.\n셀을 지우려면 우클릭합니다.

[viirld-units]
x-cargo-wagon=×[entity=__1__]
x-cargo-wagon-str=__1__w
x-cargo-wagon-tt=화물차
x-fluid-wagon=×[entity=__1__]
x-fluid-wagon-str=__1__w
x-fluid-wagon-tt=화물차 = __1__
x-reverse-count-line== __1__ __2__
x-stack=×[img=viirld_stack]
x-stack-str=__1__초
x-stack-tt=묶음
x1=×1
x1-tt=정확한 수량

[viirld]
ERR--DIRTY=기차가 비어 있지 않습니다!
ERR--DIRTY-tt=열차 내에 아이템이나 유체가 남아 있습니다. \n화물이 정리될 때까지 열차를 배송에 사용할 수 없습니다.
ERR--NO_CONNECTION=연결되지 않음 [item=green-wire][item=red-wire]
ERR--NO_CONNECTION-tt=관리자 입력부와 정류장의 상자 또는 저장 탱크가 전선으로 연결되지 않았습니다.([item=green-wire][item=red-wire])\n배송을 생성하려면 전선을 연결해야 합니다.
ERR--NO_FUEL=기차에 연료가 부족합니다!
ERR--NO_FUEL-tt=기관차에 연료가 부족합니다(모드 설정 -> 지도에서 설정한 __1__MJ 미만).\n연료를 보충할 때까지 배송에 열차를 사용할 수 없습니다.
ERR-DELETED_DELIVERY=배송 __1__가 제거되었습니다. 기차가 멈출 수 있습니다: [train-stop=__2__] → [train-stop=__3__]
ERR-NEED_CHECK=확인 필요
ERR-NEED_CHECK-tt=이전에 역에서 [__1__] 요청에 문제가 있었지만, 배송 요청을 만들 수 있었습니다.\n\n[__1__] 요청 문제가 완전히 해결되었는지 시간을 들여 확인해야 합니다.
ERR-NO_PROVIDE=공급역 없음
ERR-NO_PROVIDE-tt=[__1__]을/를 공급하는 정류장을 찾을 수 없습니다.
ERR-NO_REQUEST=요청 없음
ERR-NO_TRAIN=열차 없음
ERR-NO_TRAIN-tt=배송에 적합한 빈 열차를 찾을 수 없습니다[__1__].\n\n열차 길이가 공급 및 요청 역의 설정을 충족해야 하며, 최소 요청을 충족하는 양의 화물차를 가지고 있어야 합니다.
ERR-PAUSED=일시 정지됨
ERR-PAUSED-tt=이 역에서의 배달 생성을 일시 중지할 수 있습니다.\n\n설정에서 새 관리자를 자동으로 일시 정지할지 설정할 수 있습니다.\n\n[virtual-signal=viirld-delivery-pause] 신호를 사용하여 회로 네트워크를 사용한 일시 정지도 수행할 수 있습니다.\n새로 지어진 건물에 설정값이 이미 존재하는 경우 (고스트로부터 복사 또는 생성한 객체)이 있는 경우 해당 건물이 일시 정지됩니다. 설정에서 이 기능을 비활성화할 수 있습니다.
ERR-TNQ-LIMIT=기차 제한 도달
ERR-TNQ-LIMIT-tt=정류장의 열차 제한값에 도달하였습니다(정류장에 설정된 값)
ERR-TNQ-QUEUED=대기열 대기 중
ERR-TNQ-QUEUED-tt=아이템 공급 부족으로 인해 [__1__] 요청역에 대기열이 발생했습니다.\n\n대기열을 통해 제한된 공급량을 보다 공정하게 분배할 수 있습니다.\n\n현재 대기열: __2__
ERR-WRONG_SETTINGS=관리자 설정이 잘못되었습니다: __1__
ERR_MSG-TRAIN_ARRIVED_PROVIDER_TWICE=기차가 공급역에 이미 도착했습니다: [train-stop=__1__]
ERR_MSG-TRAIN_ARRIVED_REQUESTER_TWICE=기차가 요청역에 이미 도착했습니다: [train-stop=__1__]
ERR_MSG-TRAIN_ARRIVED_REQUESTER_WO_PROVIDER=기차가 요청역에 도착했지만 [train-stop=__1__] 공급역에서 화물을 공급받지 않은 상태였습니다.
ERR_MSG-UNEXPECTED_DEPOT=배송이 예기치 않게 대기역에 도착했습니다: [train-stop=__1__].
ERR_MSG-UNKNOWN_DELIVERY=역에 알 수 __1__ 없는 배송이 있습니다 [train-stop=__2__].
pause-by-signal=회로 네트워크에 의해 일시정지됨 [virtual-signal=viirld-delivery-pause]
pause_not_supported=일시 중지는 [item=passive-provider-chest] 공급 / [item=requester-chest] 요청 / [item=active-provider-chest] 회수 모드에서만 작동합니다.
paused=일시 정지됨
unpaused=일시 정지 해제됨
RQ-line=\n__1__. __2__
RQ-line_me=\n__1__. __2__ - 이 정류장
RQ-no=대기열 없음
